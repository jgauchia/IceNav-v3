; PlatformIO Project Configuration File 
; See README and docs/NEW_HARDWARE_ENV.md for details

[platformio]
description = ESP32 GPS Navigator
default_envs = ICENAV_BOARD

; ----------- BASE COMMON BLOCK -----------
[common]
platform = espressif32@6.9.0
framework = arduino
version = 0.2.1_alpha
revision = 85
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
extra_scripts = pre:prebuild.py
build_flags = 
  -D LV_CONF_PATH="${PROJECT_DIR}/lib/lvgl/lv_conf.h"
  -D CORE_DEBUG_LEVEL=5
  -D DISABLE_RADIO=1
  -D BAUDRATE=115200
  -D DEBUG=1
  -D SHELLMINATOR_BUFF_LEN=70
  -D SHELLMINATOR_BUFF_DIM=70
  -D SHELLMINATOR_LOGO_COLOR=BLUE
  -D COMMANDER_MAX_COMMAND_SIZE=70
  -D WCLI_MAX_CMDS=12           # set n+1 of defined commands for CLI
  ; -D DISABLE_CLI_TELNET=1     # disable remote access via telnet. It needs CLI
  ; -D DISABLE_CLI=1            # removed CLI module. Config via Bluetooth only
lib_deps = 
  ; slashdevin/NeoGPS@4.2.9
  https://github.com/jgauchia/NeoGPS.git#43c4766
 	lvgl/lvgl@9.2.2
	lovyan03/LovyanGFX@1.2.7
  hpsaturn/EasyPreferences@0.1.3
  hpsaturn/ESP32 Wifi CLI@0.3.4
  kubafilinger/AsyncTCP@1.1.1
  esphome/ESPAsyncWebServer-esphome@3.3.0
  jpb10/SolarCalculator@2.0.1
  https://github.com/leethomason/tinyxml2.git


; ----------- MODULAR FEATURES/COMPONENTS -----------

; Battery voltage monitor: set ADC and channel/pin for your hardware here
[feat_battmon]
; Common example: ESP32-S3 using ADC1 and channel 3
build_flags =
    -DADC1
    -DBATT_PIN=ADC1_CHANNEL_3

[feat_battmon_adc2]
build_flags =
    -DADC2
    -DBATT_PIN=ADC2_CHANNEL_6

; If other hardware requires ADC2 or a different channel, create another block, e.g.:
; [feat_battmon_adc2]
; build_flags =
;     -DADC2
;     -DBATT_PIN=ADC2_CHANNEL_X

[feat_gps_at6558]
build_flags = -DAT6558D_GPS

[feat_power]
build_flags = -DPOWER_SAVE

[feat_imu_mpu6050]
lib_deps = adafruit/Adafruit MPU6050@^2.2.6
build_flags = -DIMU_MPU6050

[feat_comp_hmc]
lib_deps = dfrobot/DFRobot_QMC5883@1.0.0
build_flags = -DHMC5883L

[feat_comp_qmc]
lib_deps = dfrobot/DFRobot_QMC5883@1.0.0
build_flags = -DQMC5883

[feat_bme280]
lib_deps = adafruit/Adafruit Unified Sensor@1.1.15
           adafruit/Adafruit BusIO@1.17.0
           adafruit/Adafruit BME280 Library@2.2.4
build_flags = -DBME280

[feat_scr_9488_xpt]
build_flags = -DILI9488_XPT2046_SPI

[feat_scr_9488_ft5x]
build_flags = -DILI9488_FT5x06_SPI

[feat_scr_9488_nt8b]
build_flags = -DILI9488_NOTOUCH_8B

[feat_scr_9341_xpt]
build_flags = -DILI9341_XPT2046_SPI

[feat_scr_9341_notouch]
build_flags = -DILI9341_NOTOUCH_SPI

[feat_scr_9488_ft5x_16b]
build_flags = -ILI9488_FT5x06_SPI

[feat_psram]
build_flags = -DBOARD_HAS_PSRAM

[feat_spi_shared]
build_flags = -DSPI_SHARED

; ----------- ENVIRONMENTS (CONCATENATE build_flags AND lib_deps IF YOU USE FEATURES) -----------

[env:ICENAV_BOARD]
extends = common, feat_battmon_adc2, feat_gps_at6558, feat_power, feat_comp_qmc, feat_imu_mpu6050, feat_bme280
board = icenav-esp32-s3
build_flags =
    ${common.build_flags}
    ${feat_battmon_adc2.build_flags}
    ${feat_gps_at6558.build_flags}
    ${feat_power.build_flags}
    ${feat_comp_qmc.build_flags}
    ${feat_imu_mpu6050.build_flags}
    ${feat_bme280.build_flags}
lib_deps =
    ${common.lib_deps}
    ${feat_imu_mpu6050.lib_deps}
    ${feat_comp_qmc.lib_deps}
    ${feat_bme280.lib_deps}


[env:TDECK_ESP32S3]
extends = common, feat_battmon, feat_gps_at6558, feat_power, feat_spi_shared
board = T-Deck
build_flags =
    ${common.build_flags}
    ${feat_battmon.build_flags}
    ${feat_gps_at6558.build_flags}
    ${feat_power.build_flags}
    ${feat_spi_shared.build_flags}
lib_deps =
    ${common.lib_deps}


[env:ELECROW_ESP32]
extends = common, feat_battmon_adc2, feat_power
board = elecrow-esp32-s3-n16r8v-terminal
build_flags =
    ${common.build_flags}
    ${feat_battmon_adc2.build_flags}
lib_deps =
    ${common.lib_deps}


[env:MAKERF_ESP32S3]
extends = common, feat_psram, feat_battmon
board = esp32-s3-devkitc-1
build_flags =
    ${common.build_flags}
    ${feat_psram.build_flags}
    ${feat_battmon.build_flags}


[env:ESP32_N16R4]
extends = common, feat_psram
board = esp-wrover-kit
board_upload.flash_size = 16MB
board_build.partitions = default_16MB.csv
lib_deps =
    ${common.lib_deps}
build_flags =
    ${common.build_flags}
    ${feat_psram.build_flags}
    -mfix-esp32-psram-cache-issue


[env:ESP32S3_N16R8]
extends = common, feat_psram
board = esp32-s3-devkitc-1-n16r8v
board_build.partitions = default_16MB.csv
lib_deps =
    ${common.lib_deps}
build_flags =
    ${common.build_flags}
    ${feat_psram.build_flags}
    -DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1


